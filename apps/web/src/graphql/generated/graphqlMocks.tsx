/* eslint-disable @typescript-eslint/no-unused-vars */
/**
*
* THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
*
* instead, edit one of the `.graphql` files in this project and run
*
* pnpm generate-gql
*
* for this file to be re-created
*/
import { CreateRaceInput, CreateResultInput, Mutation, Query, Race, Result, UpdateRaceInput, UpdateResultInput } from './graphqlTypes';

export const aCreateRaceInput = (overrides?: Partial<CreateRaceInput>): CreateRaceInput => {
    return {
        date: overrides && overrides.hasOwnProperty('date') ? overrides.date! : 'est',
        location: overrides && overrides.hasOwnProperty('location') ? overrides.location! : 'quidem',
        name: overrides && overrides.hasOwnProperty('name') ? overrides.name! : 'modi',
    };
};

export const aCreateResultInput = (overrides?: Partial<CreateResultInput>): CreateResultInput => {
    return {
        participant: overrides && overrides.hasOwnProperty('participant') ? overrides.participant! : 'ut',
        raceId: overrides && overrides.hasOwnProperty('raceId') ? overrides.raceId! : 3789,
        time: overrides && overrides.hasOwnProperty('time') ? overrides.time! : 5557,
    };
};

export const aMutation = (overrides?: Partial<Mutation>): { __typename: 'Mutation' } & Mutation => {
    return {
        __typename: 'Mutation',
        createRace: overrides && overrides.hasOwnProperty('createRace') ? overrides.createRace! : aRace(),
        createResult: overrides && overrides.hasOwnProperty('createResult') ? overrides.createResult! : aResult(),
        deleteRace: overrides && overrides.hasOwnProperty('deleteRace') ? overrides.deleteRace! : false,
        deleteResult: overrides && overrides.hasOwnProperty('deleteResult') ? overrides.deleteResult! : false,
        updateRace: overrides && overrides.hasOwnProperty('updateRace') ? overrides.updateRace! : aRace(),
        updateResult: overrides && overrides.hasOwnProperty('updateResult') ? overrides.updateResult! : aResult(),
    };
};

export const aQuery = (overrides?: Partial<Query>): { __typename: 'Query' } & Query => {
    return {
        __typename: 'Query',
        race: overrides && overrides.hasOwnProperty('race') ? overrides.race! : aRace(),
        races: overrides && overrides.hasOwnProperty('races') ? overrides.races! : [],
        racesByYear: overrides && overrides.hasOwnProperty('racesByYear') ? overrides.racesByYear! : [],
        result: overrides && overrides.hasOwnProperty('result') ? overrides.result! : aResult(),
        resultByRaceId: overrides && overrides.hasOwnProperty('resultByRaceId') ? overrides.resultByRaceId! : [],
        results: overrides && overrides.hasOwnProperty('results') ? overrides.results! : [],
    };
};

export const aRace = (overrides?: Partial<Race>): { __typename: 'Race' } & Race => {
    return {
        __typename: 'Race',
        date: overrides && overrides.hasOwnProperty('date') ? overrides.date! : 'sint',
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 4735,
        location: overrides && overrides.hasOwnProperty('location') ? overrides.location! : 'nisi',
        name: overrides && overrides.hasOwnProperty('name') ? overrides.name! : 'aut',
        results: overrides && overrides.hasOwnProperty('results') ? overrides.results! : [],
    };
};

export const aResult = (overrides?: Partial<Result>): { __typename: 'Result' } & Result => {
    return {
        __typename: 'Result',
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 713,
        participant: overrides && overrides.hasOwnProperty('participant') ? overrides.participant! : 'dolorem',
        race: overrides && overrides.hasOwnProperty('race') ? overrides.race! : aRace(),
        time: overrides && overrides.hasOwnProperty('time') ? overrides.time! : 2144,
    };
};

export const anUpdateRaceInput = (overrides?: Partial<UpdateRaceInput>): UpdateRaceInput => {
    return {
        date: overrides && overrides.hasOwnProperty('date') ? overrides.date! : 'magnam',
        location: overrides && overrides.hasOwnProperty('location') ? overrides.location! : 'recusandae',
        name: overrides && overrides.hasOwnProperty('name') ? overrides.name! : 'debitis',
    };
};

export const anUpdateResultInput = (overrides?: Partial<UpdateResultInput>): UpdateResultInput => {
    return {
        participant: overrides && overrides.hasOwnProperty('participant') ? overrides.participant! : 'atque',
        time: overrides && overrides.hasOwnProperty('time') ? overrides.time! : 1788,
    };
};
